name: ecredis CI

on:
    push:
        branches: [ master ]
    pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Create code coverage status for the current commit
        run: |
          curl "https://{GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"in progress â€” This check has started... \",\"context\": \"code cov\"}"
        env:
          GIT_TOKEN: ${{ secrets.nikola_github_secret }}
          GIT_USER: NikolaBorisov
          ORG_NAME:  HalloAppInc
          PROJECT_NAME: ecredis
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          RUN_ID: ${{ github.run_id }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}

      - name: checkout
        uses: actions/checkout@v2.0.0

      - name: erlang
        uses: gleam-lang/setup-erlang@v1.1.2
        with:
          otp-version: 23.2

      - name: Setup redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "6.2"
          auto-start: "false"

      - name: Checkout ecredis_crc16
        uses: actions/checkout@v2
        with:
            repository: HalloAppInc/ecredis-crc16
            token: ${{ secrets.nikola_github_secret }}
            path: deps/ecredis_crc16

      - name: Prepare Deps
        run: ./rebar prepare-deps

      - name: Compile
        run: ./rebar compile

#      - name: Start Redis Cluster
#        run: cd scripts; ./create-cluster start; echo yes | ./create-cluster create

      - name: Tests
        run: ./rebar eunit

      - name: Publish coverage report
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
            name: coverage
            retention-days: 90
            path: |
                .eunit/index.html
                .eunit/*.COVER.html

      - name: Publish Redis Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
            name: redis_logs
            retention-days: 90
            path: |
                scripts/30*.log
                scripts/*.conf
                .eunit/30*.log
                .eunit/*.conf


      - name: Set the code coverage status
        run: |
            total=`cat .eunit/index.html | grep "Total" | head -1 | cut -d' ' -f2 | cut -d'%' -f 1`
            echo "total coverage:  $total"

            curl "https://${GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"success\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"${total}%\",\"context\": \"code cov\"}"
        env:
          GIT_TOKEN: ${{ secrets.nikola_github_secret }}
          GIT_USER: NikolaBorisov
          ORG_NAME:  HalloAppInc
          PROJECT_NAME: ecredis
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          RUN_ID: ${{ github.run_id }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}

